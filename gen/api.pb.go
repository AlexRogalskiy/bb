// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package buoyantio_bb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TheRequest struct {
	RequestUID           string   `protobuf:"bytes,1,opt,name=requestUID,proto3" json:"requestUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TheRequest) Reset()         { *m = TheRequest{} }
func (m *TheRequest) String() string { return proto.CompactTextString(m) }
func (*TheRequest) ProtoMessage()    {}
func (*TheRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_a4df1ba5ef4ed377, []int{0}
}
func (m *TheRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TheRequest.Unmarshal(m, b)
}
func (m *TheRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TheRequest.Marshal(b, m, deterministic)
}
func (dst *TheRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TheRequest.Merge(dst, src)
}
func (m *TheRequest) XXX_Size() int {
	return xxx_messageInfo_TheRequest.Size(m)
}
func (m *TheRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TheRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TheRequest proto.InternalMessageInfo

func (m *TheRequest) GetRequestUID() string {
	if m != nil {
		return m.RequestUID
	}
	return ""
}

type TheResponse struct {
	RequestUID           string   `protobuf:"bytes,1,opt,name=requestUID,proto3" json:"requestUID,omitempty"`
	Payload              string   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TheResponse) Reset()         { *m = TheResponse{} }
func (m *TheResponse) String() string { return proto.CompactTextString(m) }
func (*TheResponse) ProtoMessage()    {}
func (*TheResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_a4df1ba5ef4ed377, []int{1}
}
func (m *TheResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TheResponse.Unmarshal(m, b)
}
func (m *TheResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TheResponse.Marshal(b, m, deterministic)
}
func (dst *TheResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TheResponse.Merge(dst, src)
}
func (m *TheResponse) XXX_Size() int {
	return xxx_messageInfo_TheResponse.Size(m)
}
func (m *TheResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TheResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TheResponse proto.InternalMessageInfo

func (m *TheResponse) GetRequestUID() string {
	if m != nil {
		return m.RequestUID
	}
	return ""
}

func (m *TheResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*TheRequest)(nil), "buoyantio.bb.TheRequest")
	proto.RegisterType((*TheResponse)(nil), "buoyantio.bb.TheResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TheServiceClient is the client API for TheService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TheServiceClient interface {
	TheFunction(ctx context.Context, in *TheRequest, opts ...grpc.CallOption) (*TheResponse, error)
}

type theServiceClient struct {
	cc *grpc.ClientConn
}

func NewTheServiceClient(cc *grpc.ClientConn) TheServiceClient {
	return &theServiceClient{cc}
}

func (c *theServiceClient) TheFunction(ctx context.Context, in *TheRequest, opts ...grpc.CallOption) (*TheResponse, error) {
	out := new(TheResponse)
	err := c.cc.Invoke(ctx, "/buoyantio.bb.TheService/theFunction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TheServiceServer is the server API for TheService service.
type TheServiceServer interface {
	TheFunction(context.Context, *TheRequest) (*TheResponse, error)
}

func RegisterTheServiceServer(s *grpc.Server, srv TheServiceServer) {
	s.RegisterService(&_TheService_serviceDesc, srv)
}

func _TheService_TheFunction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TheRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TheServiceServer).TheFunction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buoyantio.bb.TheService/TheFunction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TheServiceServer).TheFunction(ctx, req.(*TheRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TheService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "buoyantio.bb.TheService",
	HandlerType: (*TheServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "theFunction",
			Handler:    _TheService_TheFunction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_a4df1ba5ef4ed377) }

var fileDescriptor_api_a4df1ba5ef4ed377 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x2a, 0xcd, 0xaf, 0x4c, 0xcc, 0x2b, 0xc9, 0xcc,
	0xd7, 0x4b, 0x4a, 0x52, 0xd2, 0xe1, 0xe2, 0x0a, 0xc9, 0x48, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x92, 0xe3, 0xe2, 0x2a, 0x82, 0x30, 0x43, 0x3d, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x90, 0x44, 0x94, 0xdc, 0xb9, 0xb8, 0xc1, 0xaa, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53,
	0x09, 0x29, 0x17, 0x92, 0xe0, 0x62, 0x2f, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0x91, 0x60, 0x02,
	0x4b, 0xc2, 0xb8, 0x46, 0x41, 0x60, 0x6b, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x5c,
	0xb8, 0xb8, 0x4b, 0x32, 0x52, 0xdd, 0x4a, 0xf3, 0x92, 0x4b, 0x32, 0xf3, 0xf3, 0x84, 0x24, 0xf4,
	0x90, 0x9d, 0xa8, 0x87, 0x70, 0x9f, 0x94, 0x24, 0x16, 0x19, 0x88, 0x5b, 0x94, 0x18, 0x92, 0xd8,
	0xc0, 0xfe, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xfc, 0xde, 0xd0, 0xd9, 0xec, 0x00, 0x00,
	0x00,
}
